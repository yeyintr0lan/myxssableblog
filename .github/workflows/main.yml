# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Push and Deploy at Digital Ocean

on:
# Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  REGISTRY: "registry.digitalocean.com/devsecopstest"
  IMAGE_NAME: "xssable"
  LOGINPASS: ${{ secrets.LOGINPASS }}



jobs:
     
  docker_scan:
  
    name: docker vuln check
    runs-on: ubuntu-latest
    #needs: code_check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build container image
      run: docker build -t fordockerscan .
    
    - name: Trivy Action
      # You may pin to the exact commit or the version.
      # uses: lazy-actions/gitrivy@6edf95fdc8b1fb841a974536316b209cd16f9000
      uses: lazy-actions/gitrivy@v3
      with:
        # Trivy version
        trivy_version: latest # optional, default is latest
        # The target image name of vulnerability scan (specify this parameter or "IMAGE_NAME" environment variable
        image: fordockerscan # optional
        # severities of vulnerabilities (separated by commma)
        severity: HIGH,CRITICAL,MEDIUM,LOW # optional, default is HIGH,CRITICAL
        # target vlunerability [os,library] (separated by commma)
        vuln_type: os,library # optional, default is os,library
        # Ignore unfixed vulnerabilities [true, false]
        #ignore_unfixed: # optional, default is false
        # Trivy --template option
        #template: # optional
        # GitHub access token used to create a issue
        token: ${{ secrets.GITHUB_TOKEN }}
        # Issue title
        #issue_title: # optional, default is Security Alert
        # Issue label (separated by commma)
        #issue_label: # optional, default is trivy,vulnerability
        # Issue assignee (separated by commma)
       #issue_assignee: # optional
        # Whether the action should fail if a vulnerability was found
        fail_on_vulnerabilities: false # optional, default is false   
        

    
  cred_scan:
  
    name: hardcoded cred check
    runs-on: ubuntu-latest
    needs: docker_scan
    steps:
  
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Install git-secret
      # You may pin to the exact commit or the version.
      # uses: Kingmidas74/git-secret-github-action@25e24ea809349f430b23c182836f693bebe483f2
      uses: Kingmidas74/git-secret-github-action@latest
      with:
        #prefix for installation
       prefix: ''
       #optional, default is usr/local
   #  - name: git-secret check
    #  run: git-secrets --install | git-secrets --add 'password\s*=\s*.+' | git add . | git commit -m "Added" 
    
    - name: Check password
      # You may pin to the exact commit or the version.
      # uses: AlicanAkkus/pinder-action@c488da46c0e9ec52e84811f897fd4a5aaf0b89a6
      uses: AlicanAkkus/pinder-action@1.0.0
      
  sast_test:
  
    name: sast testing
    runs-on: ubuntu-latest
    needs: cred_scan
    steps:
  
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
      
    - name: Python Syntax Checker
      # You may pin to the exact commit or the version.
      # uses: cclauss/Find-Python-syntax-errors-action@90f67be9fb626b675a3971b1d08ab29851cb721f
      uses: cclauss/Find-Python-syntax-errors-action@v0.2.0
      
    - name: GitHub Action for pytest
      # You may pin to the exact commit or the version.
      # uses: cclauss/GitHub-Action-for-pytest@5863d02de95f37516a732802fa6257dfdf93e54c
      uses: cclauss/GitHub-Action-for-pytest@0.5.0
     
    - name: sast-scan
  # You may pin to the exact commit or the version.
  # uses: AppThreat/sast-scan-action@4d0f956e6ba3c940a22679fd8fe7cb2e755f3d96
      uses: AppThreat/sast-scan-action@1.0.2
      with:
        output: reports
        type: python,credscan
      env:
        SCAN_ID: ${{ github.sha }}
        WORKSPACE: https://github.com/${{ github.repository }}/blob/${{ github.sha }}
        
    - name: dep-scan
      # You may pin to the exact commit or the version.
      # uses: AppThreat/dep-scan-action@891ef9b33618c5f7be2dcc8674e49f16f7a0b2ee
      uses: AppThreat/dep-scan-action@v1.0.0
      env:
        VDB_HOME: ${{ github.workspace }}/db
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload scan reports
      uses: actions/upload-artifact@v1.0.0
      with:
        name: sast-scan-reports
        path: reports
        
  build_and_push:
    
    name: Docker build and push
    runs-on: ubuntu-latest
    needs: sast_test
    steps:
      
    - name: Checkout
      uses: actions/checkout@v2
    #It is an official GitHub Action used to check-out a repository so a workflow can access it.
    # By default, it clones your current repository ({{ github.repository }}) but you can also use this action to clone a different repository, 
    # and specify additionnal parameters like token, branch, path etc...
    - name: Build container image
      run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
      

  deploy:
    name: docker deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build_and_push
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA
          script: |
            docker login $REGISTRY -u ${{ secrets.DIGITAL_OCEAN_DOCKER_KEY }} -p ${{ secrets.DIGITAL_OCEAN_DOCKER_KEY }}
            # Stop running container
            docker stop $(echo $IMAGE_NAME)

            # Remove old container
            docker rm $(echo $IMAGE_NAME)

            # Run a new container from a new image
            docker run -d \
            --restart always \
            -p 5000:5000 \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
  
  function_test:
    name: selenium test
    runs-on: windows-latest
    needs: deploy
    
    steps:
      
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: setup-chromedriver
  # You may pin to the exact commit or the version.
  # uses: nanasess/setup-chromedriver@835cae695490330a7e390033b2b5bd67e6f8055e
      uses: nanasess/setup-chromedriver@v1.0.1
    
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      
      with:
        envs: LOGINPASS,GITHUB_SHA
        # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        python-version: 3 # optional, default is 3.x
        # The target architecture (x86, x64) of the Python interpreter.
        #architecture: # optional
        # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
        token: ${{ secrets.GITHUB_TOKEN }} # optional, default is ${{ github.token }}
        run: |
          python -m pip install --upgrade pip
          pip install selenium
          python seleniumtest.py
      
  dast_scan:
    
    name: dast scan
    runs-on: ubuntu-latest
    needs: function_test
    steps:
      
    - name: Checkout
      uses: actions/checkout@v2
    
    #- name: OWASP ZAP Baseline Scan
  # You may pin to the exact commit or the version.
  # uses: zaproxy/action-baseline@3aac1ff9578859a12d8b84c035f4e5394fe79f61
    #  uses: zaproxy/action-baseline@v0.5.0
   #   with:
        # GitHub Token to create issues in the repository
   #     token: ${{ secrets.GITHUB_TOKEN }} # optional, default is ${{ github.token }}
        # Target URL
    #    target: ${{ secrets.TARGET_URL }}
        # Relative path of the ZAP configuration file
        #rules_file_name: # optional
        # The Docker file to be executed
   #     docker_name: owasp/zap2docker-stable # default is owasp/zap2docker-stable
        # Additional command line options
        #cmd_options: # optional
        # The title for the GitHub issue to be created
    #    issue_title: ZAP baseline Report # optional, default is ZAP Scan Baseline Report
        # The action status will be set to fail if ZAP identifies any alerts during the baseline scan
    #    fail_action: false # optional
        # The action will file the report to the GitHub issue using the issue_title input
   #    allow_issue_writing: true # optional, default is true

    - name: OWASP ZAP Full Scan
    # You may pin to the exact commit or the version.
    # uses: zaproxy/action-full-scan@1f35897c4c11af6b1203c36b67a5ba99c3c5b5f4
      uses: zaproxy/action-full-scan@v0.3.0
      with:
        # GitHub Token to create issues in the repository
        token: ${{ secrets.GITHUB_TOKEN }} # optional, default is ${{ github.token }}
        # Target URL
        target: ${{ secrets.TARGET_URL }}
        # Relative path of the ZAP configuration file
        #rules_file_name: # optional
        # The Docker file to be executed
        docker_name: owasp/zap2docker-stable # default is owasp/zap2docker-stable
        # Additional command line options
        #cmd_options: # optional
        # The title for the GitHub issue to be created
        issue_title: ZAP Full Scan Report # optional, default is ZAP Full Scan Report
        # The action status will be set to fail if ZAP identifies any alerts during the full scan
        fail_action: false # optional
        # Whether Github issues should be created or not
        allow_issue_writing: true # optional, default is true

  
